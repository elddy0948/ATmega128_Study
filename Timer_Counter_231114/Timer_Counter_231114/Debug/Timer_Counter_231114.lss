
Timer_Counter_231114.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000031c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002a8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800100  00800100  0000031c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000031c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000034c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  0000038c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ad4  00000000  00000000  00000434  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000081d  00000000  00000000  00000f08  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004f6  00000000  00000000  00001725  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000178  00000000  00000000  00001c1c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004eb  00000000  00000000  00001d94  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000168  00000000  00000000  0000227f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  000023e7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
   6:	00 00       	nop
   8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
   a:	00 00       	nop
   c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
   e:	00 00       	nop
  10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
  12:	00 00       	nop
  14:	03 c1       	rjmp	.+518    	; 0x21c <__vector_5>
  16:	00 00       	nop
  18:	12 c1       	rjmp	.+548    	; 0x23e <__vector_6>
  1a:	00 00       	nop
  1c:	21 c1       	rjmp	.+578    	; 0x260 <__vector_7>
  1e:	00 00       	nop
  20:	30 c1       	rjmp	.+608    	; 0x282 <__vector_8>
  22:	00 00       	nop
  24:	ea c0       	rjmp	.+468    	; 0x1fa <__vector_9>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
  2e:	00 00       	nop
  30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
  32:	00 00       	nop
  34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
  36:	00 00       	nop
  38:	39 c0       	rjmp	.+114    	; 0xac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	c9 c0       	rjmp	.+402    	; 0x1d4 <__vector_16>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
  52:	00 00       	nop
  54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	1d c0       	rjmp	.+58     	; 0xac <__bad_interrupt>
  72:	00 00       	nop
  74:	1b c0       	rjmp	.+54     	; 0xac <__bad_interrupt>
  76:	00 00       	nop
  78:	19 c0       	rjmp	.+50     	; 0xac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	aa 30       	cpi	r26, 0x0A	; 10
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	02 d0       	rcall	.+4      	; 0xae <main>
  aa:	fc c0       	rjmp	.+504    	; 0x2a4 <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <main>:

#include "she.h"

void main(void)
{
	init_ports();
  ae:	05 d0       	rcall	.+10     	; 0xba <init_ports>
	init_ext_int();
  b0:	09 d0       	rcall	.+18     	; 0xc4 <init_ext_int>
	init_tc_int();
  b2:	0e d0       	rcall	.+28     	; 0xd0 <init_tc_int>
	
	sei();
  b4:	78 94       	sei
	
    while (1) 
    {
		she_main();
  b6:	33 d0       	rcall	.+102    	; 0x11e <she_main>
  b8:	fe cf       	rjmp	.-4      	; 0xb6 <main+0x8>

000000ba <init_ports>:
unsigned char her_count = 0;
unsigned char his_count = 0;

void init_ports(void)
{
	DDRC |= 0xFF;
  ba:	84 b3       	in	r24, 0x14	; 20
  bc:	8f ef       	ldi	r24, 0xFF	; 255
  be:	84 bb       	out	0x14, r24	; 20
	PORTC = 0xFF;
  c0:	85 bb       	out	0x15, r24	; 21
  c2:	08 95       	ret

000000c4 <init_ext_int>:
}

void init_ext_int(void)
{
	EIMSK |= 0xF0;
  c4:	89 b7       	in	r24, 0x39	; 57
  c6:	80 6f       	ori	r24, 0xF0	; 240
  c8:	89 bf       	out	0x39, r24	; 57
	EICRB = 0b10111110;	
  ca:	8e eb       	ldi	r24, 0xBE	; 190
  cc:	8a bf       	out	0x3a, r24	; 58
  ce:	08 95       	ret

000000d0 <init_tc_int>:
}

void init_tc_int(void)
{
	TIMSK |= (1 << TOIE0);
  d0:	87 b7       	in	r24, 0x37	; 55
  d2:	81 60       	ori	r24, 0x01	; 1
  d4:	87 bf       	out	0x37, r24	; 55
	TIMSK |= (1 << OCIE2);
  d6:	87 b7       	in	r24, 0x37	; 55
  d8:	80 68       	ori	r24, 0x80	; 128
  da:	87 bf       	out	0x37, r24	; 55
	OCR2 = HER_BIRTHDAY;
  dc:	8d e6       	ldi	r24, 0x6D	; 109
  de:	83 bd       	out	0x23, r24	; 35
	TCNT0 = HIS_BIRTHDAY;
  e0:	85 e3       	ldi	r24, 0x35	; 53
  e2:	82 bf       	out	0x32, r24	; 50
  e4:	08 95       	ret

000000e6 <start_timer2>:
}

void start_timer2(void)
{
	TCCR2 |= (1 << CS20);
  e6:	85 b5       	in	r24, 0x25	; 37
  e8:	81 60       	ori	r24, 0x01	; 1
  ea:	85 bd       	out	0x25, r24	; 37
	TCCR2 |= (1 << CS22);
  ec:	85 b5       	in	r24, 0x25	; 37
  ee:	84 60       	ori	r24, 0x04	; 4
  f0:	85 bd       	out	0x25, r24	; 37
	TCCR2 |= (1 << WGM21); // CTC
  f2:	85 b5       	in	r24, 0x25	; 37
  f4:	88 60       	ori	r24, 0x08	; 8
  f6:	85 bd       	out	0x25, r24	; 37
  f8:	08 95       	ret

000000fa <start_timer0>:
}

void start_timer0(void)
{
	TCCR0 |= (1 << CS00);
  fa:	83 b7       	in	r24, 0x33	; 51
  fc:	81 60       	ori	r24, 0x01	; 1
  fe:	83 bf       	out	0x33, r24	; 51
	TCCR0 |= (1 << CS01);
 100:	83 b7       	in	r24, 0x33	; 51
 102:	82 60       	ori	r24, 0x02	; 2
 104:	83 bf       	out	0x33, r24	; 51
	TCCR0 |= (1 << CS02);
 106:	83 b7       	in	r24, 0x33	; 51
 108:	84 60       	ori	r24, 0x04	; 4
 10a:	83 bf       	out	0x33, r24	; 51
 10c:	08 95       	ret

0000010e <stop_timer2>:
}

void stop_timer2(void)
{
	TCCR2 &= 0xF8;
 10e:	85 b5       	in	r24, 0x25	; 37
 110:	88 7f       	andi	r24, 0xF8	; 248
 112:	85 bd       	out	0x25, r24	; 37
 114:	08 95       	ret

00000116 <stop_timer0>:
}

void stop_timer0(void)
{
	TCCR0 &= 0xF8;
 116:	83 b7       	in	r24, 0x33	; 51
 118:	88 7f       	andi	r24, 0xF8	; 248
 11a:	83 bf       	out	0x33, r24	; 51
 11c:	08 95       	ret

0000011e <she_main>:
}

void she_main(void)
{
	if (EINT4_FLAG == 1)
 11e:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <EINT4_FLAG>
 122:	81 30       	cpi	r24, 0x01	; 1
 124:	19 f4       	brne	.+6      	; 0x12c <she_main+0xe>
	{
		EINT4_FLAG = 0;
 126:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <EINT4_FLAG>
		start_timer2();
 12a:	dd df       	rcall	.-70     	; 0xe6 <start_timer2>
	}
	if (EINT5_FLAG == 1)
 12c:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <EINT5_FLAG>
 130:	81 30       	cpi	r24, 0x01	; 1
 132:	19 f4       	brne	.+6      	; 0x13a <she_main+0x1c>
	{
		EINT5_FLAG = 0;
 134:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <EINT5_FLAG>
		stop_timer2();
 138:	ea df       	rcall	.-44     	; 0x10e <stop_timer2>
	}
	if (EINT6_FLAG == 1)
 13a:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <EINT6_FLAG>
 13e:	81 30       	cpi	r24, 0x01	; 1
 140:	19 f4       	brne	.+6      	; 0x148 <she_main+0x2a>
	{
		EINT6_FLAG = 0;
 142:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <EINT6_FLAG>
		start_timer0();
 146:	d9 df       	rcall	.-78     	; 0xfa <start_timer0>
	}
	if (EINT7_FLAG == 1)
 148:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <EINT7_FLAG>
 14c:	81 30       	cpi	r24, 0x01	; 1
	{
		EINT7_FLAG = 0;
 14e:	19 f4       	brne	.+6      	; 0x156 <she_main+0x38>
 150:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <EINT7_FLAG>
		stop_timer0();
 154:	e0 df       	rcall	.-64     	; 0x116 <stop_timer0>
	}
	if (TINT0_OVF_FLAG == 1)
 156:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <TINT0_OVF_FLAG>
 15a:	81 30       	cpi	r24, 0x01	; 1
 15c:	d9 f4       	brne	.+54     	; 0x194 <she_main+0x76>
	{
		TINT0_OVF_FLAG = 0;
 15e:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <TINT0_OVF_FLAG>
		his_count++;
 162:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 166:	8f 5f       	subi	r24, 0xFF	; 255
 168:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		if (his_count == 10)
 16c:	8a 30       	cpi	r24, 0x0A	; 10
 16e:	91 f4       	brne	.+36     	; 0x194 <she_main+0x76>
		{
			if (state0) PORTC = 0xF0;
 170:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <state0>
 174:	88 23       	and	r24, r24
 176:	19 f0       	breq	.+6      	; 0x17e <she_main+0x60>
 178:	80 ef       	ldi	r24, 0xF0	; 240
 17a:	85 bb       	out	0x15, r24	; 21
 17c:	02 c0       	rjmp	.+4      	; 0x182 <she_main+0x64>
			else PORTC = 0x0F;
 17e:	8f e0       	ldi	r24, 0x0F	; 15
 180:	85 bb       	out	0x15, r24	; 21
			state0 = !state0;
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <state0>
 188:	91 11       	cpse	r25, r1
 18a:	80 e0       	ldi	r24, 0x00	; 0
 18c:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <state0>
			his_count = 0;
 190:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
		}
		
	}
	if (TINT2_COMP_FLAG == 1)
 194:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <TINT2_COMP_FLAG>
 198:	81 30       	cpi	r24, 0x01	; 1
 19a:	d9 f4       	brne	.+54     	; 0x1d2 <she_main+0xb4>
	{
		TINT2_COMP_FLAG = 0;
 19c:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <TINT2_COMP_FLAG>
		her_count++;
 1a0:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <her_count>
 1a4:	8f 5f       	subi	r24, 0xFF	; 255
 1a6:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <her_count>
		if (her_count == 100)
 1aa:	84 36       	cpi	r24, 0x64	; 100
 1ac:	91 f4       	brne	.+36     	; 0x1d2 <she_main+0xb4>
		{
			if (state2) PORTC = 0xAA;
 1ae:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <state2>
 1b2:	88 23       	and	r24, r24
 1b4:	19 f0       	breq	.+6      	; 0x1bc <she_main+0x9e>
 1b6:	8a ea       	ldi	r24, 0xAA	; 170
 1b8:	85 bb       	out	0x15, r24	; 21
 1ba:	02 c0       	rjmp	.+4      	; 0x1c0 <she_main+0xa2>
			else PORTC = 0x55;
 1bc:	85 e5       	ldi	r24, 0x55	; 85
 1be:	85 bb       	out	0x15, r24	; 21
			state2 = !state2;
 1c0:	81 e0       	ldi	r24, 0x01	; 1
 1c2:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <state2>
 1c6:	91 11       	cpse	r25, r1
 1c8:	80 e0       	ldi	r24, 0x00	; 0
 1ca:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <state2>
			her_count = 0;
 1ce:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <her_count>
 1d2:	08 95       	ret

000001d4 <__vector_16>:
		
	}
}

ISR(TIMER0_OVF_vect)
{
 1d4:	1f 92       	push	r1
 1d6:	0f 92       	push	r0
 1d8:	0f b6       	in	r0, 0x3f	; 63
 1da:	0f 92       	push	r0
 1dc:	11 24       	eor	r1, r1
 1de:	8f 93       	push	r24
	cli();
 1e0:	f8 94       	cli
	TCNT0 = HIS_BIRTHDAY;
 1e2:	85 e3       	ldi	r24, 0x35	; 53
 1e4:	82 bf       	out	0x32, r24	; 50
	TINT0_OVF_FLAG = 1;
 1e6:	81 e0       	ldi	r24, 0x01	; 1
 1e8:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <TINT0_OVF_FLAG>
	sei();
 1ec:	78 94       	sei
}
 1ee:	8f 91       	pop	r24
 1f0:	0f 90       	pop	r0
 1f2:	0f be       	out	0x3f, r0	; 63
 1f4:	0f 90       	pop	r0
 1f6:	1f 90       	pop	r1
 1f8:	18 95       	reti

000001fa <__vector_9>:

ISR(TIMER2_COMP_vect)
{
 1fa:	1f 92       	push	r1
 1fc:	0f 92       	push	r0
 1fe:	0f b6       	in	r0, 0x3f	; 63
 200:	0f 92       	push	r0
 202:	11 24       	eor	r1, r1
 204:	8f 93       	push	r24
	cli();
 206:	f8 94       	cli
	TINT2_COMP_FLAG = 1;
 208:	81 e0       	ldi	r24, 0x01	; 1
 20a:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <TINT2_COMP_FLAG>
	sei();	
 20e:	78 94       	sei
}
 210:	8f 91       	pop	r24
 212:	0f 90       	pop	r0
 214:	0f be       	out	0x3f, r0	; 63
 216:	0f 90       	pop	r0
 218:	1f 90       	pop	r1
 21a:	18 95       	reti

0000021c <__vector_5>:

ISR(INT4_vect)
{
 21c:	1f 92       	push	r1
 21e:	0f 92       	push	r0
 220:	0f b6       	in	r0, 0x3f	; 63
 222:	0f 92       	push	r0
 224:	11 24       	eor	r1, r1
 226:	8f 93       	push	r24
	cli();
 228:	f8 94       	cli
	EINT4_FLAG = 1;
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <EINT4_FLAG>
	sei();
 230:	78 94       	sei
}
 232:	8f 91       	pop	r24
 234:	0f 90       	pop	r0
 236:	0f be       	out	0x3f, r0	; 63
 238:	0f 90       	pop	r0
 23a:	1f 90       	pop	r1
 23c:	18 95       	reti

0000023e <__vector_6>:

ISR(INT5_vect)
{
 23e:	1f 92       	push	r1
 240:	0f 92       	push	r0
 242:	0f b6       	in	r0, 0x3f	; 63
 244:	0f 92       	push	r0
 246:	11 24       	eor	r1, r1
 248:	8f 93       	push	r24
	cli();
 24a:	f8 94       	cli
	EINT5_FLAG = 1;
 24c:	81 e0       	ldi	r24, 0x01	; 1
 24e:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <EINT5_FLAG>
	sei();
 252:	78 94       	sei
}
 254:	8f 91       	pop	r24
 256:	0f 90       	pop	r0
 258:	0f be       	out	0x3f, r0	; 63
 25a:	0f 90       	pop	r0
 25c:	1f 90       	pop	r1
 25e:	18 95       	reti

00000260 <__vector_7>:

ISR(INT6_vect)
{
 260:	1f 92       	push	r1
 262:	0f 92       	push	r0
 264:	0f b6       	in	r0, 0x3f	; 63
 266:	0f 92       	push	r0
 268:	11 24       	eor	r1, r1
 26a:	8f 93       	push	r24
	cli();
 26c:	f8 94       	cli
	EINT6_FLAG = 1;
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <EINT6_FLAG>
	sei();
 274:	78 94       	sei
}
 276:	8f 91       	pop	r24
 278:	0f 90       	pop	r0
 27a:	0f be       	out	0x3f, r0	; 63
 27c:	0f 90       	pop	r0
 27e:	1f 90       	pop	r1
 280:	18 95       	reti

00000282 <__vector_8>:

ISR(INT7_vect)
{
 282:	1f 92       	push	r1
 284:	0f 92       	push	r0
 286:	0f b6       	in	r0, 0x3f	; 63
 288:	0f 92       	push	r0
 28a:	11 24       	eor	r1, r1
 28c:	8f 93       	push	r24
	cli();
 28e:	f8 94       	cli
	EINT7_FLAG = 1;
 290:	81 e0       	ldi	r24, 0x01	; 1
 292:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <EINT7_FLAG>
	sei();	
 296:	78 94       	sei
 298:	8f 91       	pop	r24
 29a:	0f 90       	pop	r0
 29c:	0f be       	out	0x3f, r0	; 63
 29e:	0f 90       	pop	r0
 2a0:	1f 90       	pop	r1
 2a2:	18 95       	reti

000002a4 <_exit>:
 2a4:	f8 94       	cli

000002a6 <__stop_program>:
 2a6:	ff cf       	rjmp	.-2      	; 0x2a6 <__stop_program>
