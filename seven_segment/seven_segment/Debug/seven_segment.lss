
seven_segment.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00000188  000001fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000188  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000206  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000238  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  00000278  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000bd5  00000000  00000000  000002b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008b7  00000000  00000000  00000e85  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000053c  00000000  00000000  0000173c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000098  00000000  00000000  00001c78  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004a2  00000000  00000000  00001d10  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000054e  00000000  00000000  000021b2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00002700  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 e8       	ldi	r30, 0x88	; 136
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 30       	cpi	r26, 0x0A	; 10
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	02 d0       	rcall	.+4      	; 0xb8 <main>
  b4:	67 c0       	rjmp	.+206    	; 0x184 <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <main>:
void example_falling_edge(unsigned char num);

void main(void)
{
	unsigned char old_sw, curr_sw, num;
	DDRB |= SEGMENT_OUTPUT;
  b8:	87 b3       	in	r24, 0x17	; 23
  ba:	80 6f       	ori	r24, 0xF0	; 240
  bc:	87 bb       	out	0x17, r24	; 23
	DDRD |= SEGMENT_OUTPUT;
  be:	81 b3       	in	r24, 0x11	; 17
  c0:	80 6f       	ori	r24, 0xF0	; 240
  c2:	81 bb       	out	0x11, r24	; 17
	DDRG |= DIGIT_SELECTION_OUTPUT;
  c4:	e4 e6       	ldi	r30, 0x64	; 100
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 81       	ld	r24, Z
  ca:	8f 60       	ori	r24, 0x0F	; 15
  cc:	80 83       	st	Z, r24
	
	DDRE &= 0x0F;
  ce:	82 b1       	in	r24, 0x02	; 2
  d0:	8f 70       	andi	r24, 0x0F	; 15
  d2:	82 b9       	out	0x02, r24	; 2
	
	PORTB = 0x0;
  d4:	18 ba       	out	0x18, r1	; 24
	PORTD = 0x0;
  d6:	12 ba       	out	0x12, r1	; 18
	PORTG = 0x08;
  d8:	88 e0       	ldi	r24, 0x08	; 8
  da:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
	
	old_sw = PINE & 0xF0;
  de:	31 b1       	in	r19, 0x01	; 1
  e0:	30 7f       	andi	r19, 0xF0	; 240
	num = 0;
  e2:	80 e0       	ldi	r24, 0x00	; 0
  e4:	01 c0       	rjmp	.+2      	; 0xe8 <main+0x30>
  e6:	32 2f       	mov	r19, r18
	
    while (1)
    {
		PORTD = ((seg_pat[num] & 0x0F) << 4) | (PORTD & 0x0F);
  e8:	68 2f       	mov	r22, r24
  ea:	70 e0       	ldi	r23, 0x00	; 0
  ec:	fb 01       	movw	r30, r22
  ee:	e0 50       	subi	r30, 0x00	; 0
  f0:	ff 4f       	sbci	r31, 0xFF	; 255
  f2:	20 81       	ld	r18, Z
  f4:	90 e1       	ldi	r25, 0x10	; 16
  f6:	29 9f       	mul	r18, r25
  f8:	a0 01       	movw	r20, r0
  fa:	11 24       	eor	r1, r1
  fc:	92 b3       	in	r25, 0x12	; 18
  fe:	9f 70       	andi	r25, 0x0F	; 15
 100:	49 2b       	or	r20, r25
 102:	42 bb       	out	0x12, r20	; 18
		PORTB = (seg_pat[num] & 0x70) | (PORTB & 0x0F);
 104:	98 b3       	in	r25, 0x18	; 24
 106:	20 77       	andi	r18, 0x70	; 112
 108:	9f 70       	andi	r25, 0x0F	; 15
 10a:	92 2b       	or	r25, r18
 10c:	98 bb       	out	0x18, r25	; 24
		
		curr_sw = PINE & 0xF0;
 10e:	21 b1       	in	r18, 0x01	; 1
 110:	20 7f       	andi	r18, 0xF0	; 240
		
		if (old_sw == 0xF0 && curr_sw == 0xE0)
 112:	30 3f       	cpi	r19, 0xF0	; 240
 114:	41 f4       	brne	.+16     	; 0x126 <main+0x6e>
 116:	20 3e       	cpi	r18, 0xE0	; 224
 118:	31 f4       	brne	.+12     	; 0x126 <main+0x6e>
		{
			num = (num + 1) % 10;
 11a:	cb 01       	movw	r24, r22
 11c:	01 96       	adiw	r24, 0x01	; 1
 11e:	6a e0       	ldi	r22, 0x0A	; 10
 120:	70 e0       	ldi	r23, 0x00	; 0
 122:	09 d0       	rcall	.+18     	; 0x136 <__divmodhi4>
 124:	e0 cf       	rjmp	.-64     	; 0xe6 <main+0x2e>
		}
		else if (old_sw == 0xF0 && curr_sw == 0xD0)
 126:	30 3f       	cpi	r19, 0xF0	; 240
 128:	f1 f6       	brne	.-68     	; 0xe6 <main+0x2e>
 12a:	20 3d       	cpi	r18, 0xD0	; 208
 12c:	e1 f6       	brne	.-72     	; 0xe6 <main+0x2e>
		{
			if (num != 0) { num--; }
 12e:	88 23       	and	r24, r24
 130:	d1 f2       	breq	.-76     	; 0xe6 <main+0x2e>
 132:	81 50       	subi	r24, 0x01	; 1
 134:	d8 cf       	rjmp	.-80     	; 0xe6 <main+0x2e>

00000136 <__divmodhi4>:
 136:	97 fb       	bst	r25, 7
 138:	07 2e       	mov	r0, r23
 13a:	16 f4       	brtc	.+4      	; 0x140 <__divmodhi4+0xa>
 13c:	00 94       	com	r0
 13e:	06 d0       	rcall	.+12     	; 0x14c <__divmodhi4_neg1>
 140:	77 fd       	sbrc	r23, 7
 142:	08 d0       	rcall	.+16     	; 0x154 <__divmodhi4_neg2>
 144:	0b d0       	rcall	.+22     	; 0x15c <__udivmodhi4>
 146:	07 fc       	sbrc	r0, 7
 148:	05 d0       	rcall	.+10     	; 0x154 <__divmodhi4_neg2>
 14a:	3e f4       	brtc	.+14     	; 0x15a <__divmodhi4_exit>

0000014c <__divmodhi4_neg1>:
 14c:	90 95       	com	r25
 14e:	81 95       	neg	r24
 150:	9f 4f       	sbci	r25, 0xFF	; 255
 152:	08 95       	ret

00000154 <__divmodhi4_neg2>:
 154:	70 95       	com	r23
 156:	61 95       	neg	r22
 158:	7f 4f       	sbci	r23, 0xFF	; 255

0000015a <__divmodhi4_exit>:
 15a:	08 95       	ret

0000015c <__udivmodhi4>:
 15c:	aa 1b       	sub	r26, r26
 15e:	bb 1b       	sub	r27, r27
 160:	51 e1       	ldi	r21, 0x11	; 17
 162:	07 c0       	rjmp	.+14     	; 0x172 <__udivmodhi4_ep>

00000164 <__udivmodhi4_loop>:
 164:	aa 1f       	adc	r26, r26
 166:	bb 1f       	adc	r27, r27
 168:	a6 17       	cp	r26, r22
 16a:	b7 07       	cpc	r27, r23
 16c:	10 f0       	brcs	.+4      	; 0x172 <__udivmodhi4_ep>
 16e:	a6 1b       	sub	r26, r22
 170:	b7 0b       	sbc	r27, r23

00000172 <__udivmodhi4_ep>:
 172:	88 1f       	adc	r24, r24
 174:	99 1f       	adc	r25, r25
 176:	5a 95       	dec	r21
 178:	a9 f7       	brne	.-22     	; 0x164 <__udivmodhi4_loop>
 17a:	80 95       	com	r24
 17c:	90 95       	com	r25
 17e:	bc 01       	movw	r22, r24
 180:	cd 01       	movw	r24, r26
 182:	08 95       	ret

00000184 <_exit>:
 184:	f8 94       	cli

00000186 <__stop_program>:
 186:	ff cf       	rjmp	.-2      	; 0x186 <__stop_program>
